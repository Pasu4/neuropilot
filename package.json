{
	"name": "neuropilot",
	"displayName": "NeuroPilot",
	"description": "Lets Neuro-sama provide inline completions in VS Code",
	"icon": "icon.png",
	"version": "1.5.0",
	"publisher": "Pasu4",
	"repository": "https://github.com/Pasu4/neuropilot",
	"license": "MIT",
	"engines": {
		"vscode": "^1.95.0"
	},
	"categories": [
		"AI",
		"Programming Languages",
		"Machine Learning"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/extension.js",
	"contributes": {
		"chatParticipants": [
			{
				"id": "neuropilot.neuro",
				"name": "neuro",
				"fullName": "Neuro-sama",
				"description": "Chat with Neuro-sama",
				"isSticky": true
			}
		],
		"commands": [
			{
				"command": "neuropilot.reconnect",
				"title": "Reconnect",
				"category": "NeuroPilot"
			},
			{
				"command": "neuropilot.sendCurrentFile",
				"title": "Send Current File As Context",
				"category": "NeuroPilot"
			},
			{
				"command": "neuropilot.giveCookie",
				"title": "Give Cookie",
				"category": "NeuroPilot"
			},
			{
				"command": "neuropilot.reloadPermissions",
				"title": "Reload Permissions",
				"category": "NeuroPilot"
			},
			{
				"command": "neuropilot.disableAllPermissions",
				"title": "Disable All Permissions",
				"category": "NeuroPilot"
			},
			{
				"command": "neuropilot.acceptRceRequest",
				"title": "Accept Neuro's Request",
				"category": "NeuroPilot"
			},
			{
				"command": "neuropilot.denyRceRequest",
				"title": "Deny Neuro's Request",
				"category": "NeuroPilot"
			},
			{
				"command": "neuropilot.revealRceNotification",
				"title": "Reveal Neuro's Request",
				"category": "NeuroPilot"
			}
		],
		"configuration": [
			{
				"title": "NeuroPilot",
				"properties": {
					"neuropilot.websocketUrl": {
						"type": "string",
						"default": "ws://localhost:8000",
						"description": "The URL to connect to the Neuro API"
					},
					"neuropilot.gameName": {
						"type": "string",
						"default": "Visual Studio Code",
						"description": "The name to use for this \"game\""
					},
					"neuropilot.beforeContext": {
						"type": "integer",
						"default": 10,
						"description": "The number of lines before the cursor position to include as context when editing a file or sending a completion request"
					},
					"neuropilot.afterContext": {
						"type": "integer",
						"default": 10,
						"description": "The number of lines after the cursor position to include as context when editing a file or sending a completion request"
					},
					"neuropilot.maxCompletions": {
						"type": "integer",
						"default": 3,
						"description": "The maximum number of completions to request"
					},
					"neuropilot.completionTrigger": {
						"type": "string",
						"default": "invokeOnly",
						"description": "When to trigger completions",
						"enum": [
							"invokeOnly",
							"automatic"
						],
						"enumDescriptions": [
							"Only request completions when the user explicitly invokes the completion provider",
							"Automatically request completions when the user stops typing"
						]
					},
					"neuropilot.initialContext": {
						"type": "string",
						"default": "You are using an extension in Visual Studio Code that allows you to code together with Vedal.",
						"description": "The initial context to sent to Neuro-sama",
						"editPresentation": "multilineText"
					},
					"neuropilot.timeout": {
						"type": "integer",
						"default": 10000,
						"description": "The timeout in milliseconds for completions and chat responses in ms"
					},
					"neuropilot.includePattern": {
						"type": "string",
						"default": "**/*",
						"markdownDescription": "A glob pattern for files Neuro is allowed to open, i.e. she will be unable to open files that don't match this pattern. Separate multiple patterns with a newline.",
						"editPresentation": "multilineText"
					},
					"neuropilot.excludePattern": {
						"type": "string",
						"default": "**/node_modules/**\n**/venv/**",
						"markdownDescription": "A glob pattern for files Neuro is not allowed to open. Applied after the include pattern. Files and folders beginning with a dot are always excluded, regardless of this setting. Separate multiple patterns with a newline.",
						"editPresentation": "multilineText"
					},
					"neuropilot.terminals": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string",
									"description": "The name Neuro can reference this terminal by"
								},
								"path": {
									"type": "string",
									"description": "The path to the terminal executable"
								},
								"args": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"description": "The arguments to pass to the terminal executable"
								}
							},
							"required": [
								"name",
								"path"
							],
							"additionalProperties": false
						},
						"description": "A list of terminals Neuro can use.",
						"default": [
							{
								"name": "PowerShell",
								"path": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
								"args": []
							},
							{
								"name": "Command Prompt",
								"path": "C:\\Windows\\System32\\cmd.exe",
								"args": [
									"/K"
								]
							},
							{
								"name": "Git Bash",
								"path": "C:\\Program Files\\Git\\bin\\bash.exe",
								"args": [
									"-i"
								]
							}
						]
					},
					"neuropilot.permission.openFiles": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Let Neuro open files in the workspace. For security reasons, Neuro cannot open anything that starts with a dot or has a parent folder that starts with a dot (e.g. `.git`, `.vscode`, ...), unless you enable Allow Unsafe Paths.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.editActiveDocument": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Let Neuro edit the active file directly.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.create": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Let Neuro create new files and folders in the workspace.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.rename": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Let Neuro rename files and folders in the workspace.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.delete": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Let Neuro delete files and folders in the workspace.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.runTasks": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Let Neuro run workspace tasks defined in `tasks.json`.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.requestCookies": {
						"type": "string",
						"default": "Copilot",
						"enum": [
							"Off",
							"Copilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution."
						],
						"markdownDescription": "Neuro may ask for cookies while coding.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.gitOperations": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Allow Neuro to perform Git operations in the workspace.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.gitTags": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Allow Neuro to create and delete tags in Git repositories.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.gitRemotes": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Allow Neuro to push, pull and fetch commits.\nAlso requires Git Operations permission to be enabled.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.editRemoteData": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Allow Neuro to add, remove and rename remotes.\nAlso requires Git Operations & Git Remotes permissions to be enabled.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.gitConfigs": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Allow Neuro to view and edit Git configuration in the workspace.\nAlso requires Git Operations permission to be enabled.\n\nRequires reloading permissions if changed."
					},
					"neuropilot.permission.terminalAccess": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Allow Neuro __direct terminal access__. Be very careful with this."
					},
					"neuropilot.permission.accessLintingAnalysis": {
						"type": "string",
						"default": "Off",
						"enum": [
							"Off",
							"Copilot",
							"Autopilot"
						],
						"enumDescriptions": [
							"Disable this permission.",
							"Require approval before execution.",
							"Execute without oversight."
						],
						"markdownDescription": "Allow Neuro to get access to linting problems within loaded files."
					},
					"neuropilot.showTimeOnTerminalStart": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Display the date and time of when a terminal is started by Neuro."
					},
					"neuropilot.terminalContextDelay": {
						"type": "number",
						"default": 400,
						"markdownDescription": "The time in ms to wait for the terminal to print more output before sending context to Neuro. This is to prevent sending multiple context messages if the terminal doesn't print fast enough."
					},
					"neuropilot.allowUnsafePaths": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Allow Neuro to view & edit files and folders in unsafe paths. These include:\n- files/folders starting with a '.'\n- parent directories and directories outside the workspace\n- Environmental variables\n\nNote that your include/exclude patterns are still respected."
					},
					"neuropilot.allowRunningAllTasks": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Allow Neuro to run all tasks regardless of their prefix in their 'detail' key."
					},
					"neuropilot.sendNewLintingProblemsOn": {
						"type": "string",
						"default": "off",
						"description": "If a new linting problem appears, on what condition should it be sent to Neuro?",
						"enum": [
							"off",
							"inCurrentFile",
							"inWorkspace"
						],
						"enumDescriptions": [
							"Only when Neuro explicitly checks for it.",
							"If a new problem appears in the file she is currently viewing.",
							"When a new problem appears anywhere in the workspace."
						]
					},
					"neuropilot.sendSaveNotifications": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Automatically send save notifications to Neuro, as long as the auto-save setting is set to a value other than `off`."
					},
					"neuropilot.requestExpiryTimeout": {
						"type": "number",
						"default": 0,
						"markdownDescription": "The time to wait (in milliseconds) before automatically rejecting Copilot-mode action requests from Neuro.\nSetting this to 0 will cause the requests to never expire."
					},
					"neuropilot.hideCopilotRequests": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Don't immediately show Copilot-mode action requests, requiring clicking the status bar item to reveal them."
					}
				}
			}
		],
		"icons": {
			"neuropilot-logo": {
				"description": "NeuroPilot logo",
				"default": {
					"fontPath": "icons.woff",
					"fontCharacter": "\\E900"
				}
			},
			"neuropilot-heart":{
				"description": "NeuroPilot heart",
				"default": {
					"fontPath": "icons.woff",
					"fontCharacter": "\\E901"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint --fix",
		"watch": "tsc -watch -p ./",
		"test": "vscode-test"
	},
	"extensionDependencies": [
		"vscode.git"
	],
	"devDependencies": {
		"@eslint/js": "^9.13.0",
		"@stylistic/eslint-plugin": "^2.9.0",
		"@types/eslint__js": "^8.42.3",
		"@types/glob-to-regexp": "^0.4.4",
		"@types/node": "^20",
		"@types/vscode": "^1.95.0",
		"@types/ws": "^8.18.0",
		"eslint": "^9.13.0",
		"typescript": "^5.8.2",
		"typescript-eslint": "^8.26.0"
	},
	"dependencies": {
		"glob-to-regexp": "^0.4.1",
		"jsonschema": "^1.5.0",
		"neuro-game-sdk": "github:AriesAlex/typescript-neuro-game-sdk#49a4a711e031447bcf4c9e5bd8caab3922ed02b5"
	}
}